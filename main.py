"""
С использованием библиотеки NetworkX требуется написать скрипт для генерации графа в модели Эрдёша-Реньи
с заданными характеристиками. Преподавателем будут даны значения количества вершин и вероятность появления
случайного ребра. Требуется вычислить в программе среднюю степень вершины и сравнить её со значением средней
степени вершины, полученной по формуле из материала лекций.
"""


import networkx as nx #импорт бибиолиотеки networkx

# функция, которая рассчитывает среднюю степень вершины
def ren_graph(n, p): # создание функции
    G = nx.erdos_renyi_graph(n, p)
    a = 0
    for n in G.nodes():
        a = a + G.degree(n)
    return (float(a) / len(G.nodes())) # функция возвращает результат расчета средней степени вершины по заданным данным


# функция, которая выводит результат на печать
def print_res(result):
    print("Разница равна:")
    print(result)


# подаются данные с урока
n = 10
p = 0.2
print(f"Данные с урока: {n}, {p}:")
res1 = ren_graph(n,p) #рассчитывает среднюю степень вершины с урока
print(res1) # печать результата рассчета средней степени вершины


# подаются индивидуальные данные
n = 7
p = 0.35
print(f"Индивидуальные данные {n}, {p}:")
res2 = ren_graph(n,p) #рассчитывает среднюю степень вершины по индивидуальному заданию
print(res2) # печать результата рассчета средней степени вершины


# сравнение средней степень вершины с урока и средней степень вершины по индивидуальным данным
if res1 > res2:
    res = res1 - res2
    print_res(res)
elif res2 > res1:
    res = res2 - res1
    print_res(res)
else:
    print("Результат одинаковый!")

